<!-- app/views/renegotiations/confirm_target.html.erb -->

<div class="product-page-container" data-controller="renegotiations">

  <!-- Sticky header: page title -->
  <div class="wrapper-that-freezes-things">
    <div class="products-header">
      <div class="page-title page-title--inline">
        <span class="page-title__text">Your Target</span>
      </div>
    </div>
  </div>

  <!-- Main content card with 3-column layout -->
  <div class="details-card"
       style="background-color: #131B3F; border-radius: 0.5rem;
              padding: 2rem; margin-bottom: 2rem;
              box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);">

    <%= form_with url: save_discount_targets_renegotiation_path(@renegotiation),
              method: :post,
              id: "discount-targets-form",
              local: true,
              data: {
                turbo:     false,
                "renegotiations-target": "discountTargetsForm",
                action:    "submit->renegotiations#onSubmit"
              } do |discount_form| %>

      <!-- ... existing form markup unchanged ... -->

    <% end %> <!-- end discount-targets form -->

    <!-- Action Buttons at Bottom -->
    <%= form_with url: set_target_renegotiation_path(@renegotiation),
                  method: :post,
                  local: true do |form| %>
      <!-- ... existing action buttons markup unchanged ... -->
    <% end %>

  </div>

  <!-- AI Suggestion Card -->
  <div class="renegotiation-card ai-suggestion-card"
       style="background-color: #131B3F; border-radius: 0.5rem;
              padding: 2rem; margin-bottom: 2rem;
              box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);">
    <%= render 'shared/ai_suggestion', suggestion: @ai_suggestion %>
  </div>

</div>

<!-- Inline script: use Turbo events and guard against missing elements -->
<script>
// Run on both initial load and Turbo visits
document.addEventListener("turbo:load", () => {
  const aiLoading = document.getElementById('ai-loading');
  const aiContent = document.getElementById('ai-content');
  if (!aiLoading || !aiContent) return;

  // Start AI processing
  const renegotiationId = <%= @renegotiation.id %>;
  startProductIntelligence(renegotiationId);

  const pollInterval = setInterval(() => {
    checkProductIntelligenceStatus(renegotiationId, pollInterval);
  }, 2000);

  // Fallback after 30s
  setTimeout(() => {
    clearInterval(pollInterval);
    if (aiContent.style.display === 'none') {
      showFallbackContent();
    }
  }, 30000);
});

// Safely update UI when AI data arrives
function updateUIWithIntelligence(intelligence) {
  const aiLoading = document.getElementById('ai-loading');
  const aiContent = document.getElementById('ai-content');
  if (aiLoading) aiLoading.style.display = 'none';
  if (aiContent) aiContent.style.display = 'block';

  const recommendationElement = document.getElementById('ai-recommendation-text');
  if (recommendationElement) {
    recommendationElement.innerText = intelligence.recommendation || 'AI analysis completed successfully.';
  }

  // Further chart and section updates should similarly guard element lookups.
}
</script>
